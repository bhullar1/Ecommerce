<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2018-11-13T02:15:35Z" name="Command line suite" finished-at="2018-11-13T02:16:19Z" duration-ms="44147">
    <groups>
    </groups>
    <test started-at="2018-11-13T02:15:35Z" name="Command line test" finished-at="2018-11-13T02:16:19Z" duration-ms="44147">
      <class name="testCases.TestCase1">
        <test-method is-config="true" signature="initialize()[pri:0, instance:testCases.TestCase1@5a63f509]" started-at="2018-11-13T02:15:35Z" name="initialize" finished-at="2018-11-13T02:15:39Z" duration-ms="3904" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testTestCase1()[pri:0, instance:testCases.TestCase1@5a63f509]" started-at="2018-11-13T02:15:39Z" name="testTestCase1" finished-at="2018-11-13T02:15:42Z" duration-ms="3128" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestCase1 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.TestCase1@5a63f509]" started-at="2018-11-13T02:15:42Z" name="tearDown" finished-at="2018-11-13T02:15:43Z" duration-ms="671" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testCases.TestCase1 -->
      <class name="testCases.TestCase2">
        <test-method is-config="true" signature="initialize()[pri:0, instance:testCases.TestCase2@6e4784bc]" started-at="2018-11-13T02:15:43Z" name="initialize" finished-at="2018-11-13T02:15:46Z" duration-ms="2783" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testTestCase2()[pri:0, instance:testCases.TestCase2@6e4784bc]" started-at="2018-11-13T02:15:46Z" name="testTestCase2" finished-at="2018-11-13T02:15:49Z" duration-ms="3484" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestCase2 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.TestCase2@6e4784bc]" started-at="2018-11-13T02:15:49Z" name="tearDown" finished-at="2018-11-13T02:15:50Z" duration-ms="718" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testCases.TestCase2 -->
      <class name="testCases.TestCase3">
        <test-method is-config="true" signature="initialize()[pri:0, instance:testCases.TestCase3@34b7ac2f]" started-at="2018-11-13T02:15:50Z" name="initialize" finished-at="2018-11-13T02:15:53Z" duration-ms="2836" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testTestCase3()[pri:0, instance:testCases.TestCase3@34b7ac2f]" started-at="2018-11-13T02:15:53Z" name="testTestCase3" finished-at="2018-11-13T02:15:55Z" duration-ms="2138" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [* The requested quantity for "Sony Xperia" is not available] but found [Some of the products cannot be ordered in requested quantity.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [* The requested quantity for "Sony Xperia" is not available] but found [Some of the products cannot be ordered in requested quantity.]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at testCases.TestCase3.testTestCase3(TestCase3.java:46)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestCase3 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.TestCase3@34b7ac2f]" started-at="2018-11-13T02:15:55Z" name="tearDown" finished-at="2018-11-13T02:15:56Z" duration-ms="646" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testCases.TestCase3 -->
      <class name="testCases.TestCase4">
        <test-method is-config="true" signature="initialize()[pri:0, instance:testCases.TestCase4@e056f20]" started-at="2018-11-13T02:15:56Z" name="initialize" finished-at="2018-11-13T02:15:59Z" duration-ms="3011" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testTestCase4()[pri:0, instance:testCases.TestCase4@e056f20]" started-at="2018-11-13T02:15:59Z" name="testTestCase4" finished-at="2018-11-13T02:16:05Z" duration-ms="6335" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestCase4 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.TestCase4@e056f20]" started-at="2018-11-13T02:16:05Z" name="tearDown" finished-at="2018-11-13T02:16:06Z" duration-ms="701" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testCases.TestCase4 -->
      <class name="testCases.TestCase5">
        <test-method is-config="true" signature="initialize()[pri:0, instance:testCases.TestCase5@4b0b0854]" started-at="2018-11-13T02:16:06Z" name="initialize" finished-at="2018-11-13T02:16:08Z" duration-ms="2803" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testTestCase5(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testCases.TestCase5@4b0b0854]" started-at="2018-11-13T02:16:08Z" name="testTestCase5" data-provider="getData" finished-at="2018-11-13T02:16:19Z" duration-ms="10266" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Gurjeet]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Singh]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Bhullar]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[gurjeet@out47.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[qwerty]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[qwerty]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[asdfg@out.com]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[my products]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestCase5 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.TestCase5@4b0b0854]" started-at="2018-11-13T02:16:19Z" name="tearDown" finished-at="2018-11-13T02:16:19Z" duration-ms="675" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testCases.TestCase5 -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
